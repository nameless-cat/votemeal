DROP TABLE vote_units IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP TABLE vote_history IF EXISTS;
DROP TABLE lunches IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 1;

CREATE TABLE users
(
  id               BIGINT GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)    NOT NULL,
  email            VARCHAR(255)    NOT NULL,
  password         VARCHAR(255)    NOT NULL,
  registered       TIMESTAMP       DEFAULT now(),
  enabled          BOOLEAN         DEFAULT TRUE
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS (email);

CREATE TABLE user_roles
(
  user_id BIGINT NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY ( user_id ) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id                BIGINT        GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name              VARCHAR(255)  NOT NULL,
  closed            BOOLEAN       DEFAULT FALSE,
  street            VARCHAR(255)  NOT NULL,
  building          INTEGER       NOT NULL,
  route_guide       VARCHAR(255)  DEFAULT '',
  work_from         TIME          NOT NULL,
  work_until        TIME          NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_name_id_idx ON restaurants (id, name);

CREATE TABLE lunches
(
  id                BIGINT        GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name              VARCHAR(255)  NOT NULL,
  price             FLOAT         NOT NULL,
  restaurant_id     BIGINT        NOT NULL,
  description       VARCHAR(255)  DEFAULT '',
  enabled           BOOLEAN       DEFAULT TRUE,
  FOREIGN KEY ( restaurant_id ) REFERENCES RESTAURANTS (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX lunches_unique_restaurant_name_idx ON lunches (restaurant_id, name);

CREATE TABLE vote_history
(
  id                BIGINT    GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurant_id     BIGINT    NOT NULL,
  user_id           BIGINT    NOT NULL,
  date              DATE      NOT NULL,
  FOREIGN KEY ( restaurant_id ) REFERENCES RESTAURANTS (id),
  FOREIGN KEY ( user_id ) REFERENCES users (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX history_unique_date_user_restaurant_idx ON vote_history (date, user_id, restaurant_id);

-- CREATE TABLE votes
-- (
--   date              DATE      DEFAULT current_date PRIMARY KEY
-- );

CREATE TABLE votes
(
  date         DATE      NOT NULL,
  restaurant_id     BIGINT    NOT NULL,
  votes             INTEGER   DEFAULT 0,
  PRIMARY KEY (date, restaurant_id),
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id)
--   FOREIGN KEY (vote_date) REFERENCES votes (date) ON DELETE CASCADE,
--   CONSTRAINT restaurant_date_idx UNIQUE (restaurant_id, vote_date)
);